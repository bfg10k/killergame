<?php

/**
 * juego actions.
 *
 * @package    killer
 * @subpackage juego
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 23810 2009-11-12 11:07:44Z Kris.Wallsmith $
 */
class juegoActions extends sfActions
{
 /**
  * Página de inicio de la parte privada
  *
  * @param sfRequest $request A request object
  */    
  public function executeIndex(sfWebRequest $request)
  {
    $id_jugador = $this->getUser()->getAttribute('user_id',null);
    if(is_null($id_jugador)) $this->redirect('visitas/index');

    $c = new Criteria();
    $c->add(KillJugadoresPeer::ID,$id_jugador);
    $jugador = KillJugadoresPeer::doSelectOne($c);
    if(!($jugador instanceof KillJugadores))
    {
      $this->redirect('visitas/index');
    }
/*   
    $victima = $jugador->getKillJugadoresRelatedByIdVictima();

    $victima->getActivo();

    while(!$victima->getActivo())
    {
      $victima = $victima->getKillJugadoressRelatedByIdVictima();
    } 
*/
    $this->jugador=$jugador;
    $this->nombre = $jugador->getNombre();
//    $this->victima=$victima;
   

  }

  /**
  * Presenta informe de objetivo cumplido
  *
  * @param sfRequest $request A request object
  */
  public function executeRellenarInforme(sfWebRequest $request)
  {
    //No hace nada (página estática)
  }

  /**
  * Guarda el informe y redirige al mensaje de info de espera de confirmación
  * 
  * No tiene vista
  *
  * @param sfRequest $request A request object
  */
  public function executeGuardarInforme(sfWebRequest $request)
  {
    //Guardar el informe. 
    //Si va bien -> redirigir a executeInformeEnviado
    $this->redirect('juego/informeEnviado');
    //Si va mal -> volver a presentar executeRellenarInforme
  }

  /**
  * Presenta un aviso de espera de confirmación
  *
  * @param sfRequest $request A request object
  */
  public function executeInformeEnviado(sfWebRequest $request)
  {
    //No hace nada (página estática)
  }

  /**
  * Página de inicio de la parte privada
  *
  * @param sfRequest $request A request object
  */
  public function executeRueda(sfWebRequest $request)
  {
    //Antes del sorteo vale esta consulta
    $this->jugadores = KillJugadoresPeer::doSelect(new Criteria());
    return "Success"; 

    //Para después del sorteo la rueda se tiene que dibujar en orden
    $id_jugador = $this->getUser()->getAttribute('user_id',null);
    if(is_null($id_jugador)) $this->redirect('visitas/index');

    $c = new Criteria();
    $c->add(KillJugadoresPeer::ID,$id_jugador);
    $jugador = KillJugadoresPeer::doSelectOne($c);
    if(!($jugador instanceof KillJugadores))
    {
      $this->redirect('visitas/index');
    }

    do {
      $this->jugadores[] = array('id'=>$jugador->getId(),'alias'=>$jugador->getAlias(),'foto'=>$jugador->getFoto());
      $jugador = $jugador->getKillJugadoresRelatedByIdVictima();
    } while($jugador->getId()!=$id_jugador);
  }

  /**
  * Página de inicio de la parte privada
  *
  * @param sfRequest $request A request object
  */
  public function executeBlog(sfWebRequest $request)
  {
    
  }
  
  public function executeNormas(sfWebRequest $request)
  {
    
  }

  public function executeEditar(sfWebRequest $request)
  {
    $id_jugador = $this->getUser()->getAttribute('user_id',null);
    if(is_null($id_jugador)) $this->redirect('visitas/index');

    $c = new Criteria();
    $c->add(KillJugadoresPeer::ID,$id_jugador);
    $jugador = KillJugadoresPeer::doSelectOne($c);
    if(!($jugador instanceof KillJugadores))
    {
      $this->redirect('visitas/index');
    }
    
    $criteria = new Criteria();
    $this->departamentos = KillDepartamentosPeer::doSelect($criteria);
      
    $this->aviso = $this->getUser()->getFlash('notice');

    $this->nombre = $jugador->getNombre();
    $this->departamento = $jugador->getIdDepartamento();
    $this->alias = $jugador->getAlias();
  }

  /**
  * Destruye la sesión y redirige al módulo de visitas
  *
  * @param sfRequest $request A request object
  */
  public function executeSalir(sfWebRequest $request)
  {
    //Borrar la sesión
    $this->getUser()->setAuthenticated(false);
    $this->getUser()->setAttribute('user_id',null);

    //Ir a visitas/index
    $this->redirect('visitas/index');
  }

}
